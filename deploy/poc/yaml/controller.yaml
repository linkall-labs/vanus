kind: ConfigMap
metadata:
  name: config-controller
  namespace: vanus
apiVersion: v1
data:
  controller.yaml: |-
    node_id: ${NODE_ID}
    name: ${POD_NAME}
    ip: ${POD_IP}
    port: 2048
    etcd:
      - vanus-controller-0.vanus-controller:2379
      - vanus-controller-1.vanus-controller:2379
      - vanus-controller-2.vanus-controller:2379
    data_dir: /data
    segment_capacity: 268435456
    replicas: 3
    metadata:
      key_prefix: /vanus
    topology:
      vanus-controller-0: vanus-controller-0.vanus-controller.vanus.svc:2048
      vanus-controller-1: vanus-controller-1.vanus-controller.vanus.svc:2048
      vanus-controller-2: vanus-controller-2.vanus-controller.vanus.svc:2048
    embed_etcd:
      # relative path to ${data_dir} above
      data_dir: etcd/data
      listen_client_addr: 0.0.0.0:2379
      listen_peer_addr: 0.0.0.0:2380
      advertise_client_addr: ${POD_NAME}.vanus-controller:2379
      advertise_peer_addr: ${POD_NAME}.vanus-controller:2380
      clusters:
        - vanus-controller-0=http://vanus-controller-0.vanus-controller:2380
        - vanus-controller-1=http://vanus-controller-1.vanus-controller:2380
        - vanus-controller-2=http://vanus-controller-2.vanus-controller:2380
    observability:
      metrics:
        enable: true
      tracing:
        enable: false
---
apiVersion: v1
kind: Service
metadata:
  name: vanus-controller
  namespace: vanus
spec:
  clusterIP: None
  ports:
    - name: vanus-controller
      port: 2048
  selector:
    app: vanus-controller
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: vanus-controller
  name: vanus-controller
  namespace: vanus
spec:
  replicas: 3
  selector:
    matchLabels:
      app: vanus-controller
  serviceName: vanus-controller
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
      labels:
        app: vanus-controller
    spec:
      containers:
        - command:
            - /bin/sh
            - -c
            - NODE_ID=${HOSTNAME##*-} /vanus/bin/controller
          env:
            - name: VANUS_LOG_LEVEL
              value: DEBUG
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          image: public.ecr.aws/vanus/controller:02c5b59
          imagePullPolicy: IfNotPresent
          name: controller
          ports:
            - containerPort: 2048
              name: grpc
            - containerPort: 2379
              name: etcd-client
            - containerPort: 2380
              name: etcd-peer
            - containerPort: 2112
              protocol: TCP
              name: metrics
          volumeMounts:
            - mountPath: /vanus/config
              name: config-controller
            - mountPath: /data
              name: data
        - name: node-exporter
          image: prom/node-exporter
          args:
            - --no-collector.wifi
            - --no-collector.hwmon
            - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/pods/.+)($|/)
            - --collector.netclass.ignored-devices=^(veth.*)$
          ports:
            - containerPort: 9100
              protocol: TCP
              name: metrics
          resources:
            limits:
              cpu: 250m
              memory: 180Mi
            requests:
              cpu: 102m
              memory: 180Mi
      volumes:
        - configMap:
            name: config-controller
          name: config-controller
  volumeClaimTemplates:
    - metadata:
        labels:
          app: vanus-controller
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 20Gi