apiVersion: v1
kind: ConfigMap
metadata:
  name: config-controller
  namespace: vanus-default
data:
  controller.yaml: |-
    node_id: ${NODE_ID}
    name: ${POD_NAME}
    ip: ${POD_IP}
    port: 2048
    replicas: 3
    segment_capacity: 4194304
    secret_encryption_salt: "encryption_salt"
    no_create_default_namespace: true
    root_controllers:
      - vanus-root-controller-0.vanus-root-controller:2021
      - vanus-root-controller-1.vanus-root-controller:2021
    observability:
      metrics:
        enable: true
      tracing:
        enable: false
        # OpenTelemetry Collector endpoint, https://opentelemetry.io/docs/collector/getting-started/
        otel_collector: http://127.0.0.1:4318
    cluster:
      component_name: controller
      lease_duration_in_sec: 15
      etcd:
        - vanus-etcd-0.vanus-etcd:2379
        - vanus-etcd-1.vanus-etcd:2379
        - vanus-etcd-2.vanus-etcd:2379
      topology:
        vanus-controller-0: vanus-controller-0.vanus-controller.vanus-default.svc:2048
        vanus-controller-1: vanus-controller-1.vanus-controller.vanus-default.svc:2048
---
apiVersion: v1
kind: Service
metadata:
  name: vanus-controller
  namespace: vanus-default
spec:
  selector:
    app: vanus-controller
  clusterIP: None
  ports:
    - port: 2048
      name: vanus-controller
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: vanus-controller
  name: vanus-controller
  namespace: vanus-default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: vanus-controller
  serviceName: vanus-controller
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        vanus.dev/metrics.port: "2112"
      labels:
        app: vanus-controller
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: core.vanus.ai/dedicated
                operator: In
                values:
                - core
      tolerations:
      - key: "core.vanus.ai/dedicated"
        operator: "Equal"
        value: "core"
        effect: "NoSchedule"
      containers:
      - command:
        - /bin/sh
        - -c
        - NODE_ID=${HOSTNAME##*-} /vanus/bin/controller
        env:
        - name: VANUS_LOG_LEVEL
          value: INFO
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: public.ecr.aws/vanus/controller:d03f5ed
        imagePullPolicy: IfNotPresent
        name: controller
        ports:
        - containerPort: 2048
          name: grpc
        - containerPort: 2112
          name: metrics
        volumeMounts:
        - mountPath: /vanus/config
          name: config-controller
      volumes:
      - configMap:
          name: config-controller
        name: config-controller
