// Copyright 2022 Linkall Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: errors.proto

package errors

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrorCode int32

const (
	ErrorCode_SUCCESS                ErrorCode = 0
	ErrorCode_UNKNOWN                ErrorCode = 9000
	ErrorCode_INVALID_REQUEST        ErrorCode = 9100
	ErrorCode_PARSE_TRANSFORM_INPUT  ErrorCode = 9101
	ErrorCode_NO_ENDPOINT            ErrorCode = 9102
	ErrorCode_INTERNAL               ErrorCode = 9200
	ErrorCode_CORRUPTED_EVENT        ErrorCode = 9201
	ErrorCode_APPEND_TO_BLOCK_FAILED ErrorCode = 9202
	ErrorCode_READ_FROM_BLOCK_FAILED ErrorCode = 9203
	ErrorCode_FULL                   ErrorCode = 9300
	ErrorCode_NOT_WRITABLE           ErrorCode = 9301
	ErrorCode_NOT_READABLE           ErrorCode = 9302
	ErrorCode_OFFSET_ON_END          ErrorCode = 9303
	ErrorCode_OFFSET_OVERFLOW        ErrorCode = 9304
	ErrorCode_OFFSET_UNDERFLOW       ErrorCode = 9305
	ErrorCode_TRY_AGAIN              ErrorCode = 9306
	ErrorCode_RESOURCE_ALREADY_EXIST ErrorCode = 9400
	ErrorCode_RESOURCE_NOT_FOUND     ErrorCode = 9401
	ErrorCode_RESOURCE_NOT_READY     ErrorCode = 9402
	ErrorCode_RESOURCE_CAN_NOT_OP    ErrorCode = 9403
	ErrorCode_SERVICE_NOT_RUNNING    ErrorCode = 9500
	ErrorCode_CLOSED                 ErrorCode = 9501
	ErrorCode_CONTEXT_CANCELED       ErrorCode = 9502
	ErrorCode_NO_LEADER              ErrorCode = 9600
	ErrorCode_NOT_LEADER             ErrorCode = 9601
	ErrorCode_NO_CONTROLLER_LEADER   ErrorCode = 9602
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0:    "SUCCESS",
		9000: "UNKNOWN",
		9100: "INVALID_REQUEST",
		9101: "PARSE_TRANSFORM_INPUT",
		9102: "NO_ENDPOINT",
		9200: "INTERNAL",
		9201: "CORRUPTED_EVENT",
		9202: "APPEND_TO_BLOCK_FAILED",
		9203: "READ_FROM_BLOCK_FAILED",
		9300: "FULL",
		9301: "NOT_WRITABLE",
		9302: "NOT_READABLE",
		9303: "OFFSET_ON_END",
		9304: "OFFSET_OVERFLOW",
		9305: "OFFSET_UNDERFLOW",
		9306: "TRY_AGAIN",
		9400: "RESOURCE_ALREADY_EXIST",
		9401: "RESOURCE_NOT_FOUND",
		9402: "RESOURCE_NOT_READY",
		9403: "RESOURCE_CAN_NOT_OP",
		9500: "SERVICE_NOT_RUNNING",
		9501: "CLOSED",
		9502: "CONTEXT_CANCELED",
		9600: "NO_LEADER",
		9601: "NOT_LEADER",
		9602: "NO_CONTROLLER_LEADER",
	}
	ErrorCode_value = map[string]int32{
		"SUCCESS":                0,
		"UNKNOWN":                9000,
		"INVALID_REQUEST":        9100,
		"PARSE_TRANSFORM_INPUT":  9101,
		"NO_ENDPOINT":            9102,
		"INTERNAL":               9200,
		"CORRUPTED_EVENT":        9201,
		"APPEND_TO_BLOCK_FAILED": 9202,
		"READ_FROM_BLOCK_FAILED": 9203,
		"FULL":                   9300,
		"NOT_WRITABLE":           9301,
		"NOT_READABLE":           9302,
		"OFFSET_ON_END":          9303,
		"OFFSET_OVERFLOW":        9304,
		"OFFSET_UNDERFLOW":       9305,
		"TRY_AGAIN":              9306,
		"RESOURCE_ALREADY_EXIST": 9400,
		"RESOURCE_NOT_FOUND":     9401,
		"RESOURCE_NOT_READY":     9402,
		"RESOURCE_CAN_NOT_OP":    9403,
		"SERVICE_NOT_RUNNING":    9500,
		"CLOSED":                 9501,
		"CONTEXT_CANCELED":       9502,
		"NO_LEADER":              9600,
		"NOT_LEADER":             9601,
		"NO_CONTROLLER_LEADER":   9602,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_errors_proto_enumTypes[0].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_errors_proto_enumTypes[0]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_errors_proto_rawDescGZIP(), []int{0}
}

var File_errors_proto protoreflect.FileDescriptor

var file_errors_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14,
	0x6c, 0x69, 0x6e, 0x6b, 0x61, 0x6c, 0x6c, 0x2e, 0x76, 0x61, 0x6e, 0x75, 0x73, 0x2e, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x2a, 0xae, 0x04, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12,
	0x0c, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0xa8, 0x46, 0x12, 0x14, 0x0a,
	0x0f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x10, 0x8c, 0x47, 0x12, 0x1a, 0x0a, 0x15, 0x50, 0x41, 0x52, 0x53, 0x45, 0x5f, 0x54, 0x52, 0x41,
	0x4e, 0x53, 0x46, 0x4f, 0x52, 0x4d, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x8d, 0x47, 0x12,
	0x10, 0x0a, 0x0b, 0x4e, 0x4f, 0x5f, 0x45, 0x4e, 0x44, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x10, 0x8e,
	0x47, 0x12, 0x0d, 0x0a, 0x08, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10, 0xf0, 0x47,
	0x12, 0x14, 0x0a, 0x0f, 0x43, 0x4f, 0x52, 0x52, 0x55, 0x50, 0x54, 0x45, 0x44, 0x5f, 0x45, 0x56,
	0x45, 0x4e, 0x54, 0x10, 0xf1, 0x47, 0x12, 0x1b, 0x0a, 0x16, 0x41, 0x50, 0x50, 0x45, 0x4e, 0x44,
	0x5f, 0x54, 0x4f, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0xf2, 0x47, 0x12, 0x1b, 0x0a, 0x16, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x46, 0x52, 0x4f, 0x4d,
	0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0xf3, 0x47,
	0x12, 0x09, 0x0a, 0x04, 0x46, 0x55, 0x4c, 0x4c, 0x10, 0xd4, 0x48, 0x12, 0x11, 0x0a, 0x0c, 0x4e,
	0x4f, 0x54, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x10, 0xd5, 0x48, 0x12, 0x11,
	0x0a, 0x0c, 0x4e, 0x4f, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x41, 0x42, 0x4c, 0x45, 0x10, 0xd6,
	0x48, 0x12, 0x12, 0x0a, 0x0d, 0x4f, 0x46, 0x46, 0x53, 0x45, 0x54, 0x5f, 0x4f, 0x4e, 0x5f, 0x45,
	0x4e, 0x44, 0x10, 0xd7, 0x48, 0x12, 0x14, 0x0a, 0x0f, 0x4f, 0x46, 0x46, 0x53, 0x45, 0x54, 0x5f,
	0x4f, 0x56, 0x45, 0x52, 0x46, 0x4c, 0x4f, 0x57, 0x10, 0xd8, 0x48, 0x12, 0x15, 0x0a, 0x10, 0x4f,
	0x46, 0x46, 0x53, 0x45, 0x54, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x52, 0x46, 0x4c, 0x4f, 0x57, 0x10,
	0xd9, 0x48, 0x12, 0x0e, 0x0a, 0x09, 0x54, 0x52, 0x59, 0x5f, 0x41, 0x47, 0x41, 0x49, 0x4e, 0x10,
	0xda, 0x48, 0x12, 0x1b, 0x0a, 0x16, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41,
	0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xb8, 0x49, 0x12,
	0x17, 0x0a, 0x12, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0xb9, 0x49, 0x12, 0x17, 0x0a, 0x12, 0x52, 0x45, 0x53, 0x4f,
	0x55, 0x52, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0xba,
	0x49, 0x12, 0x18, 0x0a, 0x13, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x43, 0x41,
	0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x4f, 0x50, 0x10, 0xbb, 0x49, 0x12, 0x18, 0x0a, 0x13, 0x53,
	0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49,
	0x4e, 0x47, 0x10, 0x9c, 0x4a, 0x12, 0x0b, 0x0a, 0x06, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10,
	0x9d, 0x4a, 0x12, 0x15, 0x0a, 0x10, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x43, 0x41,
	0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x9e, 0x4a, 0x12, 0x0e, 0x0a, 0x09, 0x4e, 0x4f, 0x5f,
	0x4c, 0x45, 0x41, 0x44, 0x45, 0x52, 0x10, 0x80, 0x4b, 0x12, 0x0f, 0x0a, 0x0a, 0x4e, 0x4f, 0x54,
	0x5f, 0x4c, 0x45, 0x41, 0x44, 0x45, 0x52, 0x10, 0x81, 0x4b, 0x12, 0x19, 0x0a, 0x14, 0x4e, 0x4f,
	0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x4c, 0x45, 0x52, 0x5f, 0x4c, 0x45, 0x41, 0x44,
	0x45, 0x52, 0x10, 0x82, 0x4b, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x69, 0x6e, 0x6b, 0x61, 0x6c, 0x6c, 0x2d, 0x6c, 0x61, 0x62, 0x73,
	0x2f, 0x76, 0x61, 0x6e, 0x75, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_errors_proto_rawDescOnce sync.Once
	file_errors_proto_rawDescData = file_errors_proto_rawDesc
)

func file_errors_proto_rawDescGZIP() []byte {
	file_errors_proto_rawDescOnce.Do(func() {
		file_errors_proto_rawDescData = protoimpl.X.CompressGZIP(file_errors_proto_rawDescData)
	})
	return file_errors_proto_rawDescData
}

var file_errors_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_errors_proto_goTypes = []interface{}{
	(ErrorCode)(0), // 0: linkall.vanus.errors.ErrorCode
}
var file_errors_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_errors_proto_init() }
func file_errors_proto_init() {
	if File_errors_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_errors_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_errors_proto_goTypes,
		DependencyIndexes: file_errors_proto_depIdxs,
		EnumInfos:         file_errors_proto_enumTypes,
	}.Build()
	File_errors_proto = out.File
	file_errors_proto_rawDesc = nil
	file_errors_proto_goTypes = nil
	file_errors_proto_depIdxs = nil
}
